{"name":"jQuery.serializeobject","body":"# What is it?\r\n\r\n`$.serializeObject` is a variant of existing `$.serialize` method which, instead\r\nof encoding form elements to string, converts form elements to a valid JSON\r\nobject.\r\n\r\n# Why?\r\n\r\nWhilst it isn't necessary in most cases, and by that I mean 99.99% kind of most,\r\nthere are times when we manipulate form data on client side. Personally I find\r\nJSON much easier to work with than DOM or string manipulation.\r\n\r\n# How do I use it?\r\n\r\nIf you want to see the code and demo first: http://jsfiddle.net/davidhong/gP9bh/\r\n\r\nSimple include the `jQuery.serializeObject.js` along with any `jQuery` instance\r\nand use it like `$.serialize`.\r\n\r\nIf you have a `form` like the following:\r\n\r\n    <form id=\"minutes\">\r\n      <input type=\"text\" name=\"subject\" />\r\n      <input type=\"text\" name=\"minute-taker\" />\r\n      <input type=\"text\" name=\"attendees\" />\r\n      ...\r\n      <input type=\"checkbox\" name=\"cc[]\" value=\"David\" />\r\n      <input type=\"checkbox\" name=\"cc[]\" value=\"John\" />\r\n      <input type=\"checkbox\" name=\"cc[]\" value=\"Alice\" />\r\n    </form>\r\n\r\nand wish to convert them to a JSON object:\r\n\r\n    var minutes = $('form#minutes').serializeObject();\r\n\r\nwill return:\r\n\r\n    {\r\n      \"subject\": \"\",\r\n      \"minuteTaker\": \"\",\r\n      \"attendees\": \"\",\r\n      \"cc[]\": []\r\n    }","tagline":"Encode a set of form elements as a JSON object for manipulation/submission. Similar to $.serialize, JSON-ized.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}